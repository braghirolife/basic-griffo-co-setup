version: '3.8'

networks:
  dev:
    driver: bridge

services:
  postgres:
    build:
      context: . #indica o dir da Dockerfile
      dockerfile: Dockerfile-api
      target: db
    platform: linux/x86_64
    image: postgres:latest
    restart: always
    container_name: postgres
    tty: true        # docker run -t
    healthcheck:
        test: ["CMD", "curl", "--http0.9","-f", "http://localhost:5432"]
        interval: 30s
        timeout: 10s
        retries: 5
    environment:
      POSTGRES_DATABASE: 'griffo'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
    ports:
      - '5432:5432'
    expose:
      - '5432'
    volumes:
      - postgres_vol:/var/lib/postgresql/data
      - ./infra:/docker-entrypoint-initdb.d/
    networks:
      - dev
    extra_hosts:
      - "docker.for.mac.host.internal:host-gateway"
  app:
    restart: always
    command: bash -c 'while !</dev/tcp/postgres/5432; do sleep 1; done; npm run dev'
    environment: 
        DB_HOST: 'postgres'
        TOKEN: 'v42EJmqBCT3dzRHYxQGN3n'
    depends_on:
      - postgres
    links:
      - postgres
    build:
      context: . #indica o dir da Dockerfile
      dockerfile: Dockerfile-api
      target: webapi
    ports:
      - '3001:3001'
    networks:
      - dev
    extra_hosts:
      - "docker.for.mac.host.internal:host-gateway"

volumes: 
  postgres_vol: