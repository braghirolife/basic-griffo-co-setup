version: '3.8'
services:
  mysql-db:
    platform: linux/x86_64
    image: mysql:5.7
    restart: always
    container_name: mysql-db
    # stdin_open: true # docker run -i
    tty: true        # docker run -t
    healthcheck:
        test: ["CMD", "curl", "--http0.9","-f", "http://localhost:3306"]
        interval: 30s
        timeout: 10s
        retries: 5
    # command: --init-file ./infra/mysql.sql
    environment:
      MYSQL_DATABASE: 'griffo_setup'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
      MYSQL_ROOT_USER: 'root'
      MYSQL_ROOT_HOST: 'localhost'
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - mysql-volume:/var/lib/mysql
      - ./mysql.sql/infra:/docker-entrypoint-initdb.d/  
    networks:
      - default
  app:
    restart: always
    command: bash -c 'while !</dev/tcp/mysql-db/3306; do sleep 1; done; npm run dev'
    environment:      # env vars
        DB_HOST: 'mysql-db'
    depends_on:
      - mysql-db
    links:
      - mysql-db
    build:
      context: . #indica o dir da Dockerfile
      dockerfile: Dockerfile-api
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - '3000:3000'
    networks:
      - default
    extra_hosts:
      - "docker.for.mac.host.internal:host-gateway"

# Names our volume
volumes: 
  mysql-volume: